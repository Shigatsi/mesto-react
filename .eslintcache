[{"E:\\praktikum\\dev\\mesto-react\\src\\reportWebVitals.js":"1","E:\\praktikum\\dev\\mesto-react\\src\\index.js":"2","E:\\praktikum\\dev\\mesto-react\\src\\components\\App.js":"3","E:\\praktikum\\dev\\mesto-react\\src\\components\\Header.js":"4","E:\\praktikum\\dev\\mesto-react\\src\\components\\Footer.js":"5","E:\\praktikum\\dev\\mesto-react\\src\\components\\Main.js":"6","E:\\praktikum\\dev\\mesto-react\\src\\components\\PopupWithForm.js":"7","E:\\praktikum\\dev\\mesto-react\\src\\utils\\Api.js":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":511,"mtime":1606565530406,"results":"11","hashOfConfig":"10"},{"size":3886,"mtime":1606767878576,"results":"12","hashOfConfig":"10"},{"size":255,"mtime":1606566252890,"results":"13","hashOfConfig":"10"},{"size":208,"mtime":1606566837784,"results":"14","hashOfConfig":"10"},{"size":3055,"mtime":1606768726614,"results":"15","hashOfConfig":"10"},{"size":1125,"mtime":1606682254353,"results":"16","hashOfConfig":"10"},{"size":3489,"mtime":1606766489206,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eseruq",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\praktikum\\dev\\mesto-react\\src\\reportWebVitals.js",[],"E:\\praktikum\\dev\\mesto-react\\src\\index.js",[],"E:\\praktikum\\dev\\mesto-react\\src\\components\\App.js",[],"E:\\praktikum\\dev\\mesto-react\\src\\components\\Header.js",[],"E:\\praktikum\\dev\\mesto-react\\src\\components\\Footer.js",[],"E:\\praktikum\\dev\\mesto-react\\src\\components\\Main.js",["35"],"\r\nimport React from 'react';\r\nimport api from '../utils/Api'\r\n\r\n\r\nfunction Main ({onEditProfile, onAddPlace, onEditAvatar}) {\r\n\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [userDescription, setuserDescription] = React.useState(\"\");\r\n  const [userAvatar, setuserAvatar] = React.useState(\"\");\r\n\r\n  React.useEffect(()=>{\r\n    api.getUserData()\r\n      .then((userData)=>{\r\n        setUserName(userData.name);\r\n        setuserDescription(userData.about)\r\n        setuserAvatar(userData.avatar)\r\n      })\r\n      .catch(err => console.error(err));//выведем ошибку\r\n  },[])\r\n\r\n// Из старого проекта скопируйте разметку карточки, находящуюся внутри тега template, и используйте её внутри JSX-итерации по массиву cards. Используйте подстановку данных элемента массива в JSX, чтобы вывести название карточки, количество лайков и указать URL изображения (как и прежде с помощью атрибута style).\r\n\r\n // <template id =\"element-template\">\r\n  //   <div class=\"elements__item\">\r\n  //     <button class=\"elements__rbin-button\" type=\"button\"></button>\r\n  //     <img class=\"elements__image\" src=\"#\"  alt=\"\"/>\r\n  //     <div class=\"elements__bar\">\r\n  //       <h2 class=\"elements__title\"></h2>\r\n  //       <div class=\"elements__like-bar\">\r\n  //         <button class=\"elements__like-button elements__like-button_empty\" type=\"button\"></button>\r\n  //         <p class=\"elements__like-counter\"></p>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n  // </template>\r\n// Немного подождите, пока загрузятся данные...\r\n\r\nconst [cards, setCards] = React.useState([]);\r\nReact.useEffect(()=>{\r\n  api.getInitialCards()\r\n  .then((initialCards)=>{\r\n\r\n    setCards([...initialCards])\r\n    console.log(initialCards)\r\n  })\r\n  .catch(err => console.error(err));\r\n}, [])\r\n\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__data\">\r\n          <div className=\"profile__avatar-conteiner\">\r\n            <img className=\"profile__avatar\" src={userAvatar} alt=\"фото Профиля\"/>\r\n            <div className=\"profile__avatar-overlay\">\r\n              <button className=\"profile__avatar-edit-button\" type=\"button\" onClick={onEditAvatar}></button>\r\n            </div>\r\n          </div>\r\n            <div className=\"profile__info\">\r\n              <p className=\"profile__name\">{userName}</p>\r\n              <p className=\"profile__lifestyle\">{userDescription}</p>\r\n              <button className=\"profile__edit-button\"  type=\"button\" onClick = {onEditProfile}></button>\r\n          </div>\r\n        </div>\r\n          <button className=\"profile__add-button\" type=\"button\" onClick = {onAddPlace}></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport default Main;\r\n","E:\\praktikum\\dev\\mesto-react\\src\\components\\PopupWithForm.js",[],"E:\\praktikum\\dev\\mesto-react\\src\\utils\\Api.js",[],{"ruleId":"36","severity":1,"message":"37","line":39,"column":8,"nodeType":"38","messageId":"39","endLine":39,"endColumn":13},"no-unused-vars","'cards' is assigned a value but never used.","Identifier","unusedVar"]